//[8-1] 예외처리의 정의와 목적에 대해서 설명하시오.

/*
<내 생각>
자바에서 에러와 예외는 구분된다.
에러는 컴파일 에러, 런타임 에러, 논리적 에러 등이 있다.
에러와 예외는 프로그래밍의 정상적인 흐름을 벗어나서 비정상적 종료를 야기하는 오류를 뜻한다.
그러나 에러는 프로그래밍 코드로 대처할 수 없는 성질을 가지고 있지만 (메모리 공간부족 등)
예외는 프로그래밍 코드로 대처할 수 있는 성질을 가지고 있다.

예외는 checked예외와 unchecked 예외로 구분되는데,
이를 판가름하는 기준점은 예외의 발생 시점에 있다.
checked 예외는 컴파일 시에 체크되는 예외로, Exception 클래스와 그 자손 클래스를 포함한다.
단, RuntimeException은 실행 예외로 이와 이를 상속하는 자손들은 unchecked 예외라고 부르며, 실행단계에서 잡아낸다.

⭐예외처리의 정의는 비정상적인 프로그램의 흐름 또는 종료를 예방하기 위해 프로그래밍 코드를 작성하는 것이다.
try~catch 구문 또는 메서드 예외 선언(예외 던지기) 은폐 등을 예시로 들 수 있다.


<정답>
⭐[정답]
정의 - 프로그램 실행 시 발생할 수 있는 예외의 발생에 대비한 코드를 작성하는 것
목적 - 프로그램의 비정상 종료를 막고, 정상적인 실행상태를 유지하는 것
[해설] 프로그램의 실행도중에 발생하는 에러는 어쩔 수 없지만, 예외는 프로그래머가 이 에 대한 처리를 미리 해주어야 한다.
에러(error) - 프로그램 코드에 의해서 수습될 수 없는 심각한 오류 예외(exception) - 프로그램 코드에 의해서 수습될 수 있는 다소 미약한 오류

예외처리(exception handling)란, 프로그램 실행 시 발생할 수 있는 예기치 못한 예외의
발생에 대비한 코드를 작성하는 것이며, 예외처리의 목적은 예외의 발생으로 인한 실행 중인 프로그램의 갑작스런 비정상 종료를 막고,
정상적인 실행상태를 유지할 수 있도록 하는 것이다.
*/